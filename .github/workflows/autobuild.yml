name: autobuild
on:
  workflow_dispatch:
  schedule:
  - cron: "0 3 * * 1"
permissions:
  contents: read
  packages: write
  id-token: write
jobs:
  matrix:
    name: matrix
    runs-on: ubuntu-latest
    steps:
    - name: checkout repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        submodules: recursive
    - name: generate matrix
      run: ./hack/ci/generate-matrix.sh
    - name: upload matrix
      uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4
      with:
        name: matrix
        path: "target/matrix.json"
        compression-level: 0
    - name: capture matrix
      id: capture-matrix
      run: >
        echo "matrix=$(cat target/matrix.json)" >> "${GITHUB_OUTPUT}"
    outputs:
      matrix: "${{ steps.capture-matrix.outputs.matrix }}"
  build:
    name: "build ${{ matrix.builds.version }} ${{ matrix.builds.flavor }}"
    needs: matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.matrix.outputs.matrix) }}
    runs-on: ubuntu-latest
    env:
      KERNEL_VERSION: "${{ matrix.builds.version }}"
      KERNEL_SRC_URL: "${{ matrix.builds.source }}"
      KERNEL_FLAVOR: "${{ matrix.builds.flavor }}"
      KERNEL_TAGS: "${{ join(matrix.builds.tags) }}"
      KERNEL_ARCHITECTURES: "${{ join(matrix.builds.architectures) }}"
      KERNEL_PUBLISH: "0"
    steps:
      - name: checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: recursive
      - name: install cosign
        uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da # v3.7.0
      - name: docker setup linux-kernel-oci
        run: sudo python3 ./hack/ci/docker-setup.py
      - name: docker setup qemu
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3
      - name: docker setup buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3
      - name: docker login ghcr.io
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          registry: ghcr.io
          username: "${{github.actor}}"
          password: "${{secrets.GITHUB_TOKEN}}"
      - name: create target directory
        run: mkdir -p target
      - name: generate docker script
        run: ./hack/ci/generate-docker-script.sh ghcr.io/edera-dev/linux-kernel-testing > target/docker.sh
      - name: run docker script
        run: sh -x target/docker.sh
